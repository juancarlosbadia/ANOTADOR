<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="SaveFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>-4, 15</value>
  </metadata>
  <metadata name="OpenFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>150, 15</value>
  </metadata>
  <metadata name="AclaraIndices.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>305, 15</value>
  </metadata>
  <data name="BotonAbreArchivo.ToolTip" xml:space="preserve">
    <value>• Abre documento en el Anotador.
— Si el registro es un documento de texto:
     Lo abre directamente en el Anotador.
— Si el registro es un directorio:
     Abre el Cuadro de Dialogo ABRIR
     (para documentos de texto)
      y el que sea seleccionado
      lo abre en el Anotador.

</value>
  </data>
  <data name="Button2.ToolTip" xml:space="preserve">
    <value>• Abre el item en programas externos
 
— Si el regitro es un Archivo de cualquier tipo
     Lo abre en el programa que corresponda.
     
— Si el registro es un Directorio:
     Explora el directorio con el Explorador de Windows</value>
  </data>
  <data name="TextoExtraeDirectorio.ToolTip" xml:space="preserve">
    <value>• Directorio Extraído. 
Si el registro era la ruta completa a un archivo, extrae el directorio de la ruta.
Si el registro era un directorio, lo corrige si le falta \ final y pone la diracción del directorio.
Si la registro no contenía \ de directorio muestra el directorio raíz C:\

Esta ruta no se guarda en los índices salvo que se pase al Texto Nombre del Registro</value>
  </data>
  <metadata name="FolderBrowserDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>441, 15</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAQAAAAAADoAgAAFgAAACgAAAAgAAAAQAAAAAEABAAAAAAAgAIAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAwMDAAICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//
        AAD///8AAAAAAAAAAAAAAAAAAAAAAAALu7u7u7u7u7u7u7uwuwAAu7u7u7u7u7u7u7u7C7uwC7u7ALu7
        u7u7u7u7sLu7sAu7u7C7u7u7u7u7u7C7u7ALu7uwC7u7u7u7u7sLu7uwC7u7uwC7u7u7u7u7AAAAsAu7
        u7uwO7u7u7u7uwAAAAALu7u7sDM7u7u7u7sAAAAAALu7u7ADM7u7u7u7AAAAAAC7u7uwADM7u7u7uwAA
        AAAAC7u7uwBzM7u7u7sAAAAAAAu7u7sABzM7u7u7sAAAAAAAu7u7sABzM7u7u7AAAAAAALu7u7sAMzM7
        u7u7AAAAAAALu7u7AAMzM7u7u7AAAAAAC7u7u7AHMzO7u7uwAAAAAAC7u7u7AHMzO7u7uwAAAAAAC7u7
        uwAHMzO7u7sAAAAAAAu7u7uwAHMzO7u7sAAAAAAAu7u7uwADMzO7u7AAAAAAALu7u7sABzMzO7u7AAAA
        AAC7u7u7sABzMzO7uwAAAAAAu7u7u7sABzMzO7uwAAAAALu7u7u7sABzMzu7sAsAAAC7u7u7u7AABzMz
        u7ALu7uwu7u7u7u7AABzM7uwC7u7C7u7u7u7u7AABzO7sAu7uwu7u7u7u7u7AAAzu7ALu7C7u7u7u7u7
        u7AAC7sAALsLu7u7u7u7u7u7u7uwAAAAAAAAAAAAAAAAAAAAAADgAAABwAAAAIAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAfAAAAH+AAAB/gAAAf8AAAH/AAAA/4AAAP+AAAB/wAAAP8AAAD/gAAAf8AAAH/AAAA/4A
        AAP+AAAB/gAAAf4AAAA+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAADgAAABw==
</value>
  </data>
</root>